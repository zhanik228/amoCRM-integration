import { IEntityAttributes, IResourceEntity, IResourceFactory } from "../../../interfaces/api";
export interface ICriteriaBuilder {
    add(item: ICriteriaItem): void;
    getCreateCriteria(): object;
    getUpdateCriteria(): object;
}
export interface ICriteriaItem {
    getCreateCriteria(): object;
    getUpdateCriteria(): object;
}
export declare class CriteriaBuilder<T extends IResourceFactory<IResourceEntity<T>>> implements ICriteriaBuilder, ICriteriaItem {
    protected items: ICriteriaItem[];
    protected entity: IResourceEntity<T>;
    constructor(entity: IResourceEntity<T>);
    add(item: ICriteriaItem): void;
    getCreateCriteria(): IEntityAttributes;
    getUpdateCriteria(): IEntityAttributes;
    protected merge(source: IEntityAttributes, criteria: IEntityAttributes): {
        _embedded: {};
        id?: number | undefined;
    };
}
