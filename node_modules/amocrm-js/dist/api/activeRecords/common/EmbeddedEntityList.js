"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmbeddedEntityList = void 0;
const lodash_1 = require("lodash");
class EmbeddedEntityList {
    constructor(options) {
        this.entity = options.entity;
        this.embeddedType = options.embeddedType;
        this.attributes = options.attributes;
    }
    add(criteria) {
        const factory = this.entity.getFactory();
        const entityCriteria = factory.getEntityCriteria(criteria);
        this.set(entityCriteria);
    }
    set(value) {
        const embedded = this.entity.getEmbedded();
        this.entity.setEmbedded(Object.assign(Object.assign({}, embedded), { [this.embeddedType]: value }));
    }
    get length() {
        return this.get().length;
    }
    get() {
        const _embedded = this.entity.getEmbedded();
        const value = _embedded[this.embeddedType];
        return value || [];
    }
    remove(value) {
        if (!value) {
            return this.set(null);
        }
        const ids = value
            .map(({ id }) => id);
        const rest = this.get().filter(item => {
            const { id } = item;
            if (!id) {
                return false;
            }
            return !ids.includes(id);
        });
        this.set(rest);
    }
    getEmbeddedSaveCriteria(attributes) {
        const readonly = attributes === undefined;
        if (readonly) {
            return {};
        }
        const value = this.get().map(item => attributes ? (0, lodash_1.pick)(item, attributes) : item);
        return {
            _embedded: {
                [this.embeddedType]: value
            }
        };
    }
    getCreateCriteria() {
        var _a, _b;
        const attributes = ((_a = this.attributes) === null || _a === void 0 ? void 0 : _a.create) || ((_b = this.attributes) === null || _b === void 0 ? void 0 : _b.save);
        return this.getEmbeddedSaveCriteria(attributes);
    }
    getUpdateCriteria() {
        var _a, _b;
        const attributes = ((_a = this.attributes) === null || _a === void 0 ? void 0 : _a.update) || ((_b = this.attributes) === null || _b === void 0 ? void 0 : _b.save);
        return this.getEmbeddedSaveCriteria(attributes);
    }
}
exports.EmbeddedEntityList = EmbeddedEntityList;
//# sourceMappingURL=EmbeddedEntityList.js.map